static const uint32_t in_com1[300] = {
    0xbd834184, 0x3e37b7af, 0xbd6b3ec4, 0xbe56f251, 
    0x3e09290c, 0x3eeeec29, 0x3e1bfe0b, 0x3e0e90ec, 
    0x3e8a2205, 0x3e4dfa9c, 0x3f0f2ba0, 0xbeae1db1, 
    0x3e5e5bb3, 0x3ee45d74, 0xbe97e992, 0xbe6dfb9b, 
    0xbb99ca98, 0x3d75a40c, 0x3e80b3dd, 0x3e55a0b4, 
    0xbd9f26d6, 0xbe137eab, 0xbeba81ce, 0x3f391ac0, 
    0x3e3b3b14, 0xbe21ce87, 0x3e605840, 0xbea3eb9e, 
    0xbef4d0d6, 0xbf58b40a, 0xbef0dce2, 0x3e77a07a, 
    0x3ead8563, 0x3ef1efc7, 0xbd5a1463, 0xbdae0e37, 
    0xbecd44bb, 0xbef84d0c, 0x3e58fdcc, 0x3f1077ea, 
    0x3e1b218e, 0xbf41f2a3, 0xbedb422b, 0x3da200fe, 
    0xbea1313f, 0xbe819ae8, 0x3ee33eec, 0x3e182821, 
    0xbda76fdf, 0x3e9fb898, 0xbf0327c9, 0xbf3a441d, 
    0x3c5c8701, 0x3eca854b, 0xbecd2a7f, 0xbe8b13cd, 
    0x3debd29c, 0xbe866587, 0xbf6b611b, 0xbf1375a0, 
    0x3df80743, 0xbe0883cc, 0xbe62f7ce, 0xbe5ceebf, 
    0xbf0fd2f5, 0x3df5b751, 0xbef84e9c, 0x3f800000, 
    0x3ea48891, 0x3dd90f2b, 0x3f076320, 0xbddeb6cd, 
    0x3dda14f9, 0x3e6c09f9, 0xbdb1d6d5, 0x3d4a86d6, 
    0xbd99fea8, 0xbe1db44f, 0x3eda0edd, 0xbee30561, 
    0x3e99a035, 0xbe5ed79e, 0xbf000712, 0x3e9b93bd, 
    0x3e0a5299, 0xbe2ac74f, 0x3e80330f, 0xbf03b83f, 
    0xbee2607a, 0x3ea03025, 0xbe7baa96, 0xbf057414, 
    0xbeb51c48, 0x3e44c9fa, 0x3e232b00, 0x3eaa0d20, 
    0xbe0690ea, 0x3e9b8e99, 0x3f07a90e, 0xbe9b0de8, 
    0xbf199326, 0x3ef2fc9c, 0xbc549674, 0xbdb1d5b1, 
    0x3ebcb056, 0xbdd9ba4a, 0x3e63e3a6, 0xbf041d77, 
    0x3e3369b3, 0xbef613c7, 0xbc78d975, 0xbebc1862, 
    0xbe12509a, 0x3f0b3b23, 0xbe4c7d68, 0x3f36077c, 
    0x3db34476, 0xbdf8acdb, 0x3dfd3b08, 0xbea290e1, 
    0x3e5fb09f, 0x3ea08b61, 0xbe78867f, 0x3dded297, 
    0xbebddfba, 0x3c67e3d4, 0xbcedca4c, 0x3f3e1fa7, 
    0x3e127494, 0x3e3a2b49, 0xbf003038, 0xbbea909a, 
    0xbecbf47b, 0x3eb19cde, 0xbd42ec0a, 0x3f45654f, 
    0x3ebf3ff6, 0x3e7bbe90, 0x3eaf2157, 0x3e9e7f4e, 
    0x3e9544ca, 0x3ee69db0, 0x3e59661e, 0xbe5debb8, 
    0xbdef30aa, 0xbeb1c093, 0xbea45ac6, 0x3e6bc039, 
    0xbaae0ebe, 0xbd54a82e, 0x3f37a281, 0x3d25d15d, 
    0x3f0c2069, 0xbf360914, 0x3e86ab15, 0x3e57e1ba, 
    0x3edf5575, 0x3d048c68, 0x3f1d4569, 0xbf0458b1, 
    0x3e618b80, 0x3d88a9a9, 0xbeb49aa8, 0x3e57f7fe, 
    0x3e7824ee, 0x3f1d20fa, 0x3e0f00e4, 0x3eeceea8, 
    0xbeaaaac2, 0x3eda99ad, 0xbef2734e, 0x3c98975d, 
    0x3f0d9e01, 0xbdf3f344, 0xbf19bf32, 0xbe5c4056, 
    0xbefef07b, 0x3ebc446a, 0xbdba06d0, 0x3ea42c2c, 
    0xbea14bb1, 0xbe6c9904, 0x3da0c223, 0x3f1ea8b6, 
    0x3e0511a2, 0xbe35720b, 0x3ddd40ee, 0xbc867f7e, 
    0xbd40e0ea, 0x3c34f0c7, 0xbddedfbd, 0xbe668463, 
    0x3e944ab1, 0x3e97bc5a, 0x3ed1983c, 0x3dec6e47, 
    0xbe56417f, 0x3dde6fbf, 0xbe05a532, 0x3f0f1e43, 
    0xbef7c117, 0xbe926342, 0x3de17e0e, 0x3ef06f21, 
    0x3e84ac79, 0xbddb4bae, 0xbe5aac22, 0x3e4c8a39, 
    0xbe18e5f4, 0x3eb050ba, 0x3ec09f3e, 0xbe7f749b, 
    0x3f3c3b64, 0xbe99e608, 0xbea6321f, 0xbeacdc2c, 
    0xbe51b8fa, 0xbe8e75ac, 0x3e38ec29, 0xbd489a23, 
    0xbed7ac13, 0xbf15601e, 0x3e0cadcd, 0xbc28d69c, 
    0x3d818d0c, 0xbd5f08af, 0xbf44525b, 0xbf0aab65, 
    0xbdb50ea8, 0xbd0e16c4, 0x3ea042e2, 0xbf000fa0, 
    0x3dff3b11, 0xbefced51, 0x3eac0794, 0xbe51f3a6, 
    0xbe5062c7, 0x3d2c4434, 0xbcc1f304, 0x3cb05655, 
    0xbe9a99f2, 0x3e4522e5, 0xbd5c01ba, 0x3edc6c86, 
    0x3ebc9075, 0xbc04e02e, 0x3ef0e2ea, 0x3f02f5e2, 
    0xbf208383, 0xbe79b627, 0x3df59ab6, 0x3f521932, 
    0x3d7c5efd, 0x3f11b52f, 0x3eb375bb, 0xbde89be9, 
    0x3d56287d, 0x3d2ef399, 0x3e1a4220, 0xbef6c9b9, 
    0xbeb49f30, 0xbe7d159a, 0x3eb83780, 0xbdb720b6, 
    0x3ef7b7e0, 0x3eb19921, 0xbea74396, 0x3d9a092e, 
    0x3db6cc3d, 0x3ef08e5d, 0x3cb29086, 0x3e6edc6d, 
    0xbdfe1077, 0xbd013ade, 0xbe215ca0, 0x3e8a2c98, 
    0x3f584af4, 0x3e52aecf, 0xbcaea02d, 0xbdf87687, 
    0xbdfd4cac, 0xbe8d71f0, 0xbe0bcdda, 0x3f747ed8, 
    0xbf18d912, 0xbe43d3ce, 0x3e3f8eaa, 0x3e795f2b, 
    0xbebe8ad5, 0x3e97eb2f, 0xbedbdbad, 0x3e6070de, 
    0x3f029a2f, 0xbe1bba76, 0xbea30170, 0xbc4c4d4b, 
    0x3f023e54, 0x3e8022b9, 0xbc447107, 0xbe0a550a 
    };

static const uint32_t in_com2[300] = {
    0x3d834184, 0x3e37b7af, 0x3d6b3ec4, 0x3e56f251, 
    0x3e09290c, 0x3eeeec29, 0x3e1bfe0b, 0x3e0e90ec, 
    0x3e8a2205, 0x3e4dfa9c, 0x3f0f2ba0, 0x3eae1db1, 
    0x3e5e5bb3, 0x3ee45d74, 0x3e97e992, 0x3e6dfb9b, 
    0x3b99ca98, 0x3d75a40c, 0x3e80b3dd, 0x3e55a0b4, 
    0x3d9f26d6, 0x3e137eab, 0x3eba81ce, 0x3f391ac0, 
    0x3e3b3b14, 0x3e21ce87, 0x3e605840, 0x3ea3eb9e, 
    0x3ef4d0d6, 0x3f58b40a, 0x3ef0dce2, 0x3e77a07a, 
    0x3ead8563, 0x3ef1efc7, 0x3d5a1463, 0x3dae0e37, 
    0x3ecd44bb, 0x3ef84d0c, 0x3e58fdcc, 0x3f1077ea, 
    0x3e1b218e, 0x3f41f2a3, 0x3edb422b, 0x3da200fe, 
    0x3ea1313f, 0x3e819ae8, 0x3ee33eec, 0x3e182821, 
    0x3da76fdf, 0x3e9fb898, 0x3f0327c9, 0x3f3a441d, 
    0x3c5c8701, 0x3eca854b, 0x3ecd2a7f, 0x3e8b13cd, 
    0x3debd29c, 0x3e866587, 0x3f6b611b, 0x3f1375a0, 
    0x3df80743, 0x3e0883cc, 0x3e62f7ce, 0x3e5ceebf, 
    0x3f0fd2f5, 0x3df5b751, 0x3ef84e9c, 0x3f800000, 
    0x3ea48891, 0x3dd90f2b, 0x3f076320, 0x3ddeb6cd, 
    0x3dda14f9, 0x3e6c09f9, 0x3db1d6d5, 0x3d4a86d6, 
    0x3d99fea8, 0x3e1db44f, 0x3eda0edd, 0x3ee30561, 
    0x3e99a035, 0x3e5ed79e, 0x3f000712, 0x3e9b93bd, 
    0x3e0a5299, 0x3e2ac74f, 0x3e80330f, 0x3f03b83f, 
    0x3ee2607a, 0x3ea03025, 0x3e7baa96, 0x3f057414, 
    0x3eb51c48, 0x3e44c9fa, 0x3e232b00, 0x3eaa0d20, 
    0x3e0690ea, 0x3e9b8e99, 0x3f07a90e, 0x3e9b0de8, 
    0x3f199326, 0x3ef2fc9c, 0x3c549674, 0x3db1d5b1, 
    0x3ebcb056, 0x3dd9ba4a, 0x3e63e3a6, 0x3f041d77, 
    0x3e3369b3, 0x3ef613c7, 0x3c78d975, 0x3ebc1862, 
    0x3e12509a, 0x3f0b3b23, 0x3e4c7d68, 0x3f36077c, 
    0x3db34476, 0x3df8acdb, 0x3dfd3b08, 0x3ea290e1, 
    0x3e5fb09f, 0x3ea08b61, 0x3e78867f, 0x3dded297, 
    0x3ebddfba, 0x3c67e3d4, 0x3cedca4c, 0x3f3e1fa7, 
    0x3e127494, 0x3e3a2b49, 0x3f003038, 0x3bea909a, 
    0x3ecbf47b, 0x3eb19cde, 0x3d42ec0a, 0x3f45654f, 
    0x3ebf3ff6, 0x3e7bbe90, 0x3eaf2157, 0x3e9e7f4e, 
    0x3e9544ca, 0x3ee69db0, 0x3e59661e, 0x3e5debb8, 
    0x3def30aa, 0x3eb1c093, 0x3ea45ac6, 0x3e6bc039, 
    0x3aae0ebe, 0x3d54a82e, 0x3f37a281, 0x3d25d15d, 
    0x3f0c2069, 0x3f360914, 0x3e86ab15, 0x3e57e1ba, 
    0x3edf5575, 0x3d048c68, 0x3f1d4569, 0x3f0458b1, 
    0x3e618b80, 0x3d88a9a9, 0x3eb49aa8, 0x3e57f7fe, 
    0x3e7824ee, 0x3f1d20fa, 0x3e0f00e4, 0x3eeceea8, 
    0x3eaaaac2, 0x3eda99ad, 0x3ef2734e, 0x3c98975d, 
    0x3f0d9e01, 0x3df3f344, 0x3f19bf32, 0x3e5c4056, 
    0x3efef07b, 0x3ebc446a, 0x3dba06d0, 0x3ea42c2c, 
    0x3ea14bb1, 0x3e6c9904, 0x3da0c223, 0x3f1ea8b6, 
    0x3e0511a2, 0x3e35720b, 0x3ddd40ee, 0x3c867f7e, 
    0x3d40e0ea, 0x3c34f0c7, 0x3ddedfbd, 0x3e668463, 
    0x3e944ab1, 0x3e97bc5a, 0x3ed1983c, 0x3dec6e47, 
    0x3e56417f, 0x3dde6fbf, 0x3e05a532, 0x3f0f1e43, 
    0x3ef7c117, 0x3e926342, 0x3de17e0e, 0x3ef06f21, 
    0x3e84ac79, 0x3ddb4bae, 0x3e5aac22, 0x3e4c8a39, 
    0x3e18e5f4, 0x3eb050ba, 0x3ec09f3e, 0x3e7f749b, 
    0x3f3c3b64, 0x3e99e608, 0x3ea6321f, 0x3eacdc2c, 
    0x3e51b8fa, 0x3e8e75ac, 0x3e38ec29, 0x3d489a23, 
    0x3ed7ac13, 0x3f15601e, 0x3e0cadcd, 0x3c28d69c, 
    0x3d818d0c, 0x3d5f08af, 0x3f44525b, 0x3f0aab65, 
    0x3db50ea8, 0x3d0e16c4, 0x3ea042e2, 0x3f000fa0, 
    0x3dff3b11, 0x3efced51, 0x3eac0794, 0x3e51f3a6, 
    0x3e5062c7, 0x3d2c4434, 0x3cc1f304, 0x3cb05655, 
    0x3e9a99f2, 0x3e4522e5, 0x3d5c01ba, 0x3edc6c86, 
    0x3ebc9075, 0x3c04e02e, 0x3ef0e2ea, 0x3f02f5e2, 
    0x3f208383, 0x3e79b627, 0x3df59ab6, 0x3f521932, 
    0x3d7c5efd, 0x3f11b52f, 0x3eb375bb, 0x3de89be9, 
    0x3d56287d, 0x3d2ef399, 0x3e1a4220, 0x3ef6c9b9, 
    0x3eb49f30, 0x3e7d159a, 0x3eb83780, 0x3db720b6, 
    0x3ef7b7e0, 0x3eb19921, 0x3ea74396, 0x3d9a092e, 
    0x3db6cc3d, 0x3ef08e5d, 0x3cb29086, 0x3e6edc6d, 
    0x3dfe1077, 0x3d013ade, 0x3e215ca0, 0x3e8a2c98, 
    0x3f584af4, 0x3e52aecf, 0x3caea02d, 0x3df87687, 
    0x3dfd4cac, 0x3e8d71f0, 0x3e0bcdda, 0x3f747ed8, 
    0x3f18d912, 0x3e43d3ce, 0x3e3f8eaa, 0x3e795f2b, 
    0x3ebe8ad5, 0x3e97eb2f, 0x3edbdbad, 0x3e6070de, 
    0x3f029a2f, 0x3e1bba76, 0x3ea30170, 0x3c4c4d4b, 
    0x3f023e54, 0x3e8022b9, 0x3c447107, 0x3e0a550a 
    };

static const uint32_t in_entropy[75] = {
    0x3ea03677, 0x3e961f95, 0x3ec9a9f4, 0x3d2d6d97, 
    0x3e2a68b6, 0x3e17af3f, 0x3e31b0f2, 0x3d7ffe40, 
    0x3dc11178, 0x3e333d7c, 0x3e0d15ec, 0x3da8ee61, 
    0x3d950af1, 0x3cc18fe7, 0x3dfda5a8, 0x3de6178f, 
    0x3e1914ec, 0x3e4402d0, 0x3e48f41e, 0x3d439b90, 
    0x3d5b4439, 0x3de9d0b4, 0x3db309e0, 0x3bee2789, 
    0x3db53702, 0x3d66d2bd, 0x3df8dcf9, 0x3d804ad4, 
    0x3e1eb80b, 0x3e355918, 0x3d1794e9, 0x3d21d7df, 
    0x3f31df28, 0x3db9b5bc, 0x3e5ba881, 0x3db3aeb4, 
    0x3dedeb32, 0x3e19d2cd, 0x3ca3395f, 0x3e386673, 
    0x3dbd5f24, 0x3e52b593, 0x3e172d7d, 0x3def3648, 
    0x3e3d816e, 0x3d06644d, 0x3c717b3e, 0x3e1baa10, 
    0x3d68e009, 0x3dd1dadf, 0x3e00f0a1, 0x3e5a7284, 
    0x3daf55c7, 0x3bc83c55, 0x3dd80e3a, 0x3e079739, 
    0x3d1b9aa7, 0x3dfd0ac3, 0x3cc67967, 0x3d4393ec, 
    0x3ddabeee, 0x3df82e7d, 0x3dccfa7c, 0x3ddec17b, 
    0x3ecccb6d, 0x3ebce1da, 0x3e6ca571, 0x3e0555d4, 
    0x3e3cebb0, 0x3d9235b9, 0x3df3a464, 0x3e1d77a5, 
    0x3d980334, 0x3da73f40, 0x3e3db88d 
    };

static const q15_t in_entropy_dim[11] = {
    0x000A, 0x0003, 0x0008, 0x0009, 0x000C, 0x0003, 0x0008, 0x0009, 
    0x000C, 0x0003, 0x0008 
    };

static const uint32_t in_logsumexp[75] = {
    0x3eee4a72, 0x3e76f785, 0x3e9639cc, 0x3d7aee18, 
    0x3e17cd99, 0x3e11b151, 0x3c868c7b, 0x3e54ed9c, 
    0x3dd0ee89, 0x3df61aee, 0x3e4e81aa, 0x3cd8b474, 
    0x3d908d43, 0x3e1f326b, 0x3e2c1791, 0x3df766e4, 
    0x3de85feb, 0x3df828e2, 0x3d94fda6, 0x3e1ae229, 
    0x3e18aa73, 0x3ddc5752, 0x3dc49304, 0x3e061a2c, 
    0x3e1ea96e, 0x3c74373c, 0x3dac93df, 0x3943df51, 
    0x3d458771, 0x3dc15afb, 0x3d89d203, 0x3d55984a, 
    0x3f0aba3b, 0x3de1caeb, 0x3eb218cf, 0x3c987986, 
    0x3e5a0c68, 0x3e1e4979, 0x3d9e22c7, 0x3d18fb73, 
    0x3e5b76e2, 0x3dfeb6df, 0x3e24785c, 0x3e1cb0a4, 
    0x3d11e70c, 0x3e4e00a7, 0x3e17a6f0, 0x3dbbd74d, 
    0x3deed8de, 0x3c5e3d73, 0x3d3e15cf, 0x3e466ca2, 
    0x3dbcdf2e, 0x3e1276e7, 0x3d8a9bf1, 0x3bb3bb66, 
    0x3d82f9df, 0x3d891c37, 0x3dacef7d, 0x3dc783a0, 
    0x3e0c1d9a, 0x3dc9fb18, 0x3dab6529, 0x3d746d68, 
    0x3eb5f983, 0x3e91f0b3, 0x3eb815ca, 0x3c0610a9, 
    0x3dbf05af, 0x3d9d284a, 0x3d3c3f6b, 0x3e88fcde, 
    0x3ea1d4fe, 0x3cdf7157, 0x3e28e63b 
    };

static const q15_t in_logsumexp_dim[11] = {
    0x000A, 0x0003, 0x0008, 0x0009, 0x000C, 0x0003, 0x0008, 0x0009, 
    0x000C, 0x0003, 0x0008 
    };

static const uint32_t in_kl1[75] = {
    0x3ebf7a89, 0x3ecad586, 0x3e6b5fe2, 0x3e0d222d, 
    0x3deda275, 0x3c95e5f9, 0x3e1def2b, 0x3dad406f, 
    0x3df90025, 0x3e620ed8, 0x3e16318c, 0x3b6a741a, 
    0x3df8b73a, 0x3de644b3, 0x3e24654e, 0x3e3686d9, 
    0x3d3cac39, 0x3e13e5f9, 0x3e10655a, 0x3dbceb61, 
    0x3dcbf4a9, 0x3d83686f, 0x3d879245, 0x3dbb9d73, 
    0x3d09b177, 0x3dccb69e, 0x3d5e608a, 0x3ced3127, 
    0x3d6bfa8f, 0x3e08977c, 0x3e18996c, 0x3df90831, 
    0x3e653b87, 0x3eca7e27, 0x3ec2e415, 0x3e3eafa4, 
    0x3e3fae59, 0x3e0aa484, 0x3ded9e04, 0x3c92a340, 
    0x3dc808d8, 0x3e639d84, 0x3d18e098, 0x3d9481f2, 
    0x3e247cf2, 0x3df93d6f, 0x3da24f64, 0x3de31145, 
    0x3cbabeac, 0x3e275ec8, 0x3e015905, 0x3e11e367, 
    0x3de71aa6, 0x3d8df69a, 0x3daec448, 0x3c9e6f7d, 
    0x3e068f8f, 0x3da354cb, 0x3da6cb01, 0x3c8bc891, 
    0x3e3b7ae5, 0x3d74c18b, 0x3e0a7338, 0x3cd08233, 
    0x3ea4c59b, 0x3ed680ff, 0x3e84b965, 0x3d524a47, 
    0x3e5caa43, 0x3e032a8f, 0x3e5eff11, 0x3e03a5fd, 
    0x3d70282c, 0x3decc06c, 0x3dad129d 
    };

static const uint32_t in_kl2[75] = {
    0x3e81e937, 0x3f26a10c, 0x3dc352c0, 0x3e11071c, 
    0x3ddf5005, 0x3e01f4f9, 0x3df35f28, 0x3ddd867e, 
    0x3e1cd48c, 0x3e1a856e, 0x3dbb1e38, 0x3e1c786d, 
    0x3e450be5, 0x3b174a25, 0x3e1a7281, 0x3dd20122, 
    0x3e125ef1, 0x3be1e17e, 0x3dc7c245, 0x3e1b5c54, 
    0x3cce8bcb, 0x3e0ba8a6, 0x3dacd41a, 0x3de9cc79, 
    0x3ca70ca6, 0x3cc68d1f, 0x3d8e25f8, 0x3d0deee6, 
    0x3e2587bf, 0x3e166b84, 0x3d452985, 0x3e09b605, 
    0x3e450615, 0x3f04eec2, 0x3e939f71, 0x3d65e830, 
    0x3e2e2cd1, 0x3e3b08ed, 0x3dee2835, 0x3d9485f5, 
    0x3cab4ddf, 0x3e0b3562, 0x3e7b5a03, 0x3d88e828, 
    0x3dc88af9, 0x3e009967, 0x3e080dd9, 0x3ca94538, 
    0x3dfc7acc, 0x3de04bf1, 0x3e4c680a, 0x3dfd563d, 
    0x3d1e4c05, 0x3d3bd84d, 0x3e1d7e34, 0x3de39704, 
    0x3d6acf57, 0x3e0a6ae2, 0x3e1bfa6c, 0x3df54746, 
    0x3dec1c84, 0x3c1b5463, 0x3cedc3d4, 0x3d03d1b0, 
    0x3e8f1340, 0x3ebcf127, 0x3eb3fb99, 0x3e19ca62, 
    0x3e0eed5b, 0x3df0725b, 0x3e27ad30, 0x3e1d52ef, 
    0x3de6263f, 0x3dd338e5, 0x3d757d91 
    };

static const q15_t in_kl_dim[11] = {
    0x000A, 0x0003, 0x0008, 0x0009, 0x000C, 0x0003, 0x0008, 0x0009, 
    0x000C, 0x0003, 0x0008 
    };

static const uint32_t in_logsumexp_dp1[75] = {
    0xbfc7f396, 0xbf0a2ef5, 0xbfc81c09, 0xc040281b, 
    0xbfb7758c, 0xc052ca03, 0xc0933e73, 0xbf9f74b8, 
    0xc0192909, 0xc013f5ed, 0xbfd23b9c, 0xbfcbff5a, 
    0xc010f9c1, 0xc09bd47d, 0xc057a8d4, 0xbfd6d213, 
    0xbfffa446, 0xc01470bf, 0xc01173fe, 0xc0001337, 
    0xc014ab98, 0xc01294de, 0xc0138914, 0xc0824727, 
    0xc02aa01c, 0xc00fa29d, 0xc0192425, 0xc073222c, 
    0xc0227cec, 0xc005f10f, 0xc0248492, 0xc0041c30, 
    0xbf11a094, 0xc032b24e, 0xbf7b6891, 0xc019fafc, 
    0xbfffe3f2, 0xc04415b6, 0xbfebda77, 0xbfd3c178, 
    0xc03b217f, 0xc01113e0, 0xbfbd6b32, 0xbfc9fcd5, 
    0xc0868df2, 0xbfe100b3, 0xc009ed16, 0xc03df09f, 
    0xbfe6475d, 0xc00fe8f8, 0xc04b0605, 0xc0009b86, 
    0xc0105668, 0xc0192919, 0xc00f4db4, 0xc02aca08, 
    0xc00cfc73, 0xc0108093, 0xc08cf40c, 0xc004f41e, 
    0xc032e68c, 0xc01b6a0f, 0xc01860f6, 0xc046fdbd, 
    0xbe8d324c, 0xbfdf9750, 0xc02b67d6, 0xc06ced2c, 
    0xbfff36b5, 0xc054dd7b, 0xbf917094, 0xbffcefe9, 
    0xc049d66b, 0xbfa8f556, 0xc04cd00b 
    };

static const uint32_t in_logsumexp_dp2[75] = {
    0xc014bb8a, 0xbf8feccd, 0xbf0bc5b1, 0xc0624f2e, 
    0xbfd16514, 0xbff1b636, 0xbfee2793, 0xbfcdbb81, 
    0xbfc950f1, 0xc0571679, 0xc0593084, 0xbfeb86ca, 
    0xc077c87a, 0xc02ba770, 0xbffec6da, 0xc049394a, 
    0xbfc9bcc2, 0xc0416178, 0xbfc7a491, 0xc00ab329, 
    0xc0047b7b, 0xc0237be7, 0xc0291556, 0xc085e3b8, 
    0xc0058a76, 0xc0052ab8, 0xc01b0b73, 0xc02f0c45, 
    0xc01e0942, 0xc0039244, 0xc0333fec, 0xc046e6d7, 
    0xbfc34252, 0xbf33ed06, 0xbf9ec1d9, 0xbfd0f009, 
    0xbfb4fe17, 0xc01dccdd, 0xbfe7a1c1, 0xc08614e9, 
    0xc0027a28, 0xc0059b8d, 0xc03f43d2, 0xc0129d53, 
    0xc0623709, 0xbfc5aab9, 0xc07a8009, 0xbfcfbbe5, 
    0xc02c8818, 0xbffdd575, 0xc070a467, 0xbfc2b137, 
    0xc01c17d3, 0xc0335969, 0xbff51fb9, 0xc00253e1, 
    0xc0b1ea24, 0xc056dd59, 0xc0027ce5, 0xc01c4c91, 
    0xc0090e7e, 0xc08bfe4a, 0xc00ce343, 0xc01b0b40, 
    0xbf5bd1ed, 0xc000ea97, 0xbf4f5b40, 0xc0169f7d, 
    0xc042016b, 0xbff54bec, 0xbfda5144, 0xc011756c, 
    0xbfe0e79c, 0xc02244b3, 0xbfdb6a96 
    };

static const q15_t in_logsumexp_dp_dim[11] = {
    0x000A, 0x0003, 0x0008, 0x0009, 0x000C, 0x0003, 0x0008, 0x0009, 
    0x000C, 0x0003, 0x0008 
    };

static const uint32_t ref_max_val[3] = {
    0x3e37b7af, 0x3eeeec29, 0x3f0f2ba0 
    };

static const q15_t ref_max_idx[3] = {
    0x0001, 0x0005, 0x000A 
    };

static const uint32_t ref_min_val[3] = {
    0xbd834184, 0xbe56f251, 0xbe56f251 
    };

static const q15_t ref_min_idx[3] = {
    0x0000, 0x0003, 0x0003 
    };

static const uint32_t ref_mean[3] = {
    0x3dcd7016, 0x3e339559, 0x3e62822d 
    };

static const uint32_t ref_power[3] = {
    0x3d222deb, 0x3eb950ee, 0x3f49b81d 
    };

static const uint32_t ref_rms[3] = {
    0x3deb47fa, 0x3e59cf34, 0x3e89089e 
    };

static const uint32_t ref_std[3] = {
    0x3e0e0864, 0x3e51ab30, 0x3e65aba3 
    };

static const uint32_t ref_var[3] = {
    0x3c9d9a9e, 0x3d2bb8f7, 0x3d4e0c85 
    };

static const uint32_t ref_entropy[10] = {
    0x3f8b8dc0, 0x3fff1fe0, 0x4003804a, 0x40138214, 
    0x3f4d0630, 0x3ffb4329, 0x4000adc8, 0x40152d0f, 
    0x3f8955ec, 0x40011433 
    };

static const uint32_t ref_logsumexp[10] = {
    0x3fb7e2d3, 0x400d341b, 0x4013cb67, 0x40247030, 
    0x3fb942e4, 0x400d3d73, 0x4013de2a, 0x402467e1, 
    0x3fb75cfe, 0x400d752e 
    };

static const uint32_t ref_kl[10] = {
    0x3e1a2f5f, 0x3de6ff9a, 0x3f5e9525, 0x3e8d4795, 
    0x3d02d782, 0x3ebada12, 0x3e5d60c2, 0x3ee3caba, 
    0x3ca0e60e, 0x3dbe4623 
    };

static const uint32_t ref_logsumexp_dp[10] = {
    0xbf8d72fc, 0xbffa2b3f, 0xc008f0f4, 0xc018d66d, 
    0xbfab83a2, 0xc00a9a59, 0xc0044cda, 0xc022e224, 
    0xbf7acf63, 0xc006498b 
    };


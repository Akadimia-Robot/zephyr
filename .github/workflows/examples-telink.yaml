# Copyright (c) 2023 Project CHIP Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Build example - Telink

on:
    push:

concurrency:
    group: ${{ github.ref }}-${{ github.workflow }}-${{ (github.event_name == 'pull_request' && github.event.number) || (github.event_name == 'workflow_dispatch' && github.run_number) || github.sha }}
    cancel-in-progress: true

env:
    CHIP_NO_LOG_TIMESTAMPS: true

jobs:
    telink:
        name: Telink
        env:
            BUILD_TYPE: telink
            ZEPHYR_TOOLCHAIN_VARIANT: zephyr
            ZEPHYR_SDK_VERSION: 0.15.2
            ZEPHYR_SDK_INSTALL_DIR: zephyrproject/zephyr-sdk-"${ZEPHYR_SDK_VERSION}"

        runs-on: ubuntu-latest
        if: github.actor != 'restyled-io[bot]'

        steps:
            - name: Install dependencies
              run: |
                    sudo apt-get install -fy --no-install-recommends ninja-build cmake make gcc gcc-multilib g++-multilib libsdl2-dev \
                    && ls -la \
                    && pwd \
                    && find -type d -name "samples"

            - name: Setup toolchain
              run: |
                    wget https://github.com/zephyrproject-rtos/sdk-ng/releases/download/v"${ZEPHYR_SDK_VERSION}"/zephyr-sdk-"${ZEPHYR_SDK_VERSION}"_linux-x86_64.tar.gz \
                    && wget -O - https://github.com/zephyrproject-rtos/sdk-ng/releases/download/v"${ZEPHYR_SDK_VERSION}"/sha256.sum | shasum --check --ignore-missing \
                    && tar xvf zephyr-sdk-"${ZEPHYR_SDK_VERSION}"_linux-x86_64.tar.gz \
                    && rm -rf zephyr-sdk-"${ZEPHYR_SDK_VERSION}"_linux-x86_64.tar.gz \
                    && cd zephyr-sdk-"${ZEPHYR_SDK_VERSION}" \
                    && ./setup.sh -t riscv64-zephyr-elf -h -c \
                    && ls -la \
                    && pwd
                    
            - name: Setup Zephyr sources
              run: |
                    echo "West setup" \
                        && pwd \
                        && python -m venv .venv \
                        && source .venv/bin/activate \
                        && python -m pip install -U pip \
                        && python -m pip install -U --no-cache-dir west==0.12.0 imgtool==1.7.0 \
                    && echo "Initializing west ..." \
                        && pwd \
                        && west init . \
                        && west update \
                        && west blobs fetch hal_telink \
                        && west zephyr-export \
                        && pip install -r zephyr/scripts/requirements.txt \
                        && ls -la \
                        && pwd

#             - name: Build Telink samples/basic/blinky app
#               run: |
#                     pwd \
#                     && source .venv/bin/activate \
#                     && west build -p -b tlsr9518adk80d -s zephyr/samples/basic/blinky
                    
#             - name: Upload samples/basic/blinky artifacts
#               uses: actions/upload-artifact@v3
#               with:
#                     name: blinky_arfcts
#                     path: /home/runner/work/telink_zephyr/telink_zephyr/zephyr/samples/basic/blinky/build/zephyr/zephyr.bin

#             - name: Build Telink samples/bluetooth/peripheral_ht app
#               run: |
#                     pwd \
#                     && source .venv/bin/activate \
#                     && west blobs fetch hal_telink \
#                     && west build -p -b tlsr9518adk80d -s zephyr/samples/bluetooth/peripheral_ht
                    
#             - name: Upload samples/bluetooth/peripheral_ht artifacts
#               uses: actions/upload-artifact@v3
#               with:
#                     name: peripheral_ht_arfcts
#                     path: /home/runner/work/telink_zephyr/telink_zephyr/zephyr/samples/bluetooth/peripheral_ht/build/zephyr/zephyr.bin 

#             - name: Build Telink samples/net/openthread/coprocessor app
#               run: |
#                     source .venv/bin/activate \
#                     && west build -p -b tlsr9518adk80d -s /zephyr/samples/net/openthread/coprocessor -- -DOVERLAY_CONFIG=overlay-rcp.conf \

#             - name: Upload samples/net/openthread/coprocessor artifacts
#               uses: actions/upload-artifact@v3
#               with:
#                     name: coprocessor_arfcts
#                     path: zephyr/samples/net/openthread/coprocessor/build/zephyr/zephyr.bin 

#             - name: Build Telink samples/net/sockets/echo_server app
#               run: |
#                     cd /samples/net/sockets/echo_server \
#                     && source .venv/bin/activate \
#                     && west build -p -b tlsr9518adk80d -s zephyr/samples/net/openthread/echo_server -- -DOVERLAY_CONFIG=overlay-ot.conf \
#                     && cd /

#             - name: Upload samples/net/sockets/echo_server artifacts
#               uses: actions/upload-artifact@v3
#               with:
#                     name: echo_server_arfcts
#                     path: zephyr/samples/net/sockets/echo_server/build/zephyr/zephyr.bin 

#             - name: Build Telink samples/net/sockets/echo_client app
#               run: |
#                     cd /samples/net/sockets/echo_client \
#                     && source .venv/bin/activate \
#                     && west build -p -b tlsr9518adk80d -s zephyr/samples/net/openthread/echo_client -- -DOVERLAY_CONFIG=overlay-ot.conf \
#                     && cd /
                    
#             - name: Upload samples/net/sockets/echo_client artifacts
#               uses: actions/upload-artifact@v3
#               with:
#                     name: echo_client_arfcts
#                     path: zephyr/samples/net/sockets/echo_client/build/zephyr/zephyr.bin 


#
# General
#

[doc_modify_repo]
match="https://github.com/NordicSemiconductor/zcbor"
rewrite="https://github.com/zephyrproject-rtos/zcbor"

[doc_remove_default_max_qty]
match=' * Generated with a --default-max-qty of 99'
rewrite=''

[code_int64_min]
match=">= -9223372036854775807LL"
rewrite=">= INT64_MIN"

[code_int64_max]
match="<= 9223372036854775807LL"
rewrite="<= INT64_MAX"

#
# lwm2m_senml_cbor_decode.c
#

[zcbor_multi_decode_senml]
match='zcbor_multi_decode(:[min_decode], :[max_decode], :[num_decode], :[decoder], :[state], :[result], :[result_len])'
rewrite='zcbor_multi_decode(:[min_decode], ZCBOR_ARRAY_SIZE(result->_lwm2m_senml__record), :[num_decode], :[decoder], :[state], :[result], :[result_len])'
rule='where :[min_decode] == 1, :[max_decode] == 99'

[zcbor_multi_decode_record]
match='zcbor_multi_decode(:[min_decode], :[max_decode], :[num_decode], :[decoder], :[state], :[result], :[result_len])'
rewrite='zcbor_multi_decode(:[min_decode], ZCBOR_ARRAY_SIZE(result->_record__key_value_pair), :[num_decode], :[decoder], :[state], :[result], :[result_len])'
rule='where :[min_decode] == 0, :[max_decode] == 5'

#
# lwm2m_senml_cbor_encode.c
#

[zcbor_list_start_encode]
match='zcbor_list_start_encode(:[state], :[max_num])'
rewrite='zcbor_list_start_encode(:[state], ZCBOR_ARRAY_SIZE(input->_lwm2m_senml__record))'
rule='where :[max_num] == 99'

[zcbor_list_end_encode]
match='zcbor_list_end_encode(:[state], :[max_num])'
rewrite='zcbor_list_end_encode(:[state], ZCBOR_ARRAY_SIZE(input->_lwm2m_senml__record))'
rule='where :[max_num] == 99'

[zcbor_multi_encode_minmax_senml]
match='zcbor_multi_encode_minmax(:[min_encode], :[max_encode], :[num_encode], :[encoder], :[state], :[input], :[input_len])'
rewrite='zcbor_multi_encode_minmax(:[min_encode], ZCBOR_ARRAY_SIZE(input->_lwm2m_senml__record), :[num_encode], :[encoder], :[state], :[input], :[input_len])'
rule='where :[max_encode] == 99'

[zcbor_map_start_encode]
match='zcbor_map_start_encode(:[state], :[max_num])'
rewrite='zcbor_map_start_encode(:[state], ZCBOR_ARRAY_SIZE(input->_record__key_value_pair) + 5)'
rule='where :[max_num] == 10'

[zcbor_map_end_encode]
match='zcbor_map_end_encode(:[state], :[max_num])'
rewrite='zcbor_map_end_encode(:[state], ZCBOR_ARRAY_SIZE(input->_record__key_value_pair) + 5)'
rule='where :[max_num] == 10'

[zcbor_multi_encode_minmax_record]
match='zcbor_multi_encode_minmax(:[min_encode], :[max_encode], :[num_encode], :[encoder], :[state], :[input], :[input_len])'
rewrite='zcbor_multi_encode_minmax(:[min_encode], ZCBOR_ARRAY_SIZE(input->_record__key_value_pair), :[num_encode], :[encoder], :[state], :[input], :[input_len])'
rule='where :[min_encode] == 0, :[max_encode] == 5'

[lwm2m_senml_cbor_key]
match='zcbor_multi_encode_minmax(:[min_encode], :[max_encode], :[num_encode], :[encoder], :[state], :[input], :[input_len])'
rewrite='zcbor_multi_encode_minmax(:[min_encode], ZCBOR_ARRAY_SIZE(input->_record__key_value_pair), :[num_encode], :[encoder], :[state], :[input], :[input_len])'
rule='where :[min_encode] == 0, :[max_encode] == 5'

#
# lwm2m_senml_cbor_types.h
#

[include_zcbor_common]
match='#define :[1\n]'
rewrite='#define :[1\n]#include "zcbor_common.h"'
rule='where :[1] == "LWM2M_SENML_CBOR_TYPES_H__\n"'

[default_max_qty_to_zephyr_config]
match='#define DEFAULT_MAX_QTY :[1]'
rewrite='#define DEFAULT_MAX_QTY CONFIG_LWM2M_RW_SENML_CBOR_RECORDS'
rule='where :[1] == 99'

[lwm2m_senml_record_use_define]
match='_lwm2m_senml__record[99]'
rewrite='_lwm2m_senml__record[DEFAULT_MAX_QTY]'

[remove_default_max_qty_check]
match='''#if DEFAULT_MAX_QTY != 99
#error "The type file was generated with a different default_max_qty than this file"
#endif'''
rewrite=''

[add_lwm2m_senml_cbor_key]
match='#endif /* LWM2M_SENML_CBOR_TYPES_H__ */'
rewrite='''
enum lwm2m_senml_cbor_key {
	lwm2m_senml_cbor_key_bn = -2,
	lwm2m_senml_cbor_key_bt = -3,
	lwm2m_senml_cbor_key_n = 0,
	lwm2m_senml_cbor_key_t = 6,
	lwm2m_senml_cbor_key_vi = 2,
	lwm2m_senml_cbor_key_vf = 2,
	lwm2m_senml_cbor_key_vs = 3,
	lwm2m_senml_cbor_key_vb = 4,
	lwm2m_senml_cbor_key_vd = 8,
};

#endif /* LWM2M_SENML_CBOR_TYPES_H__ */
'''

[include_cbor_types]
match='#include "lwm2m_senml_cbor_encode.h"'
rewrite='''#include "lwm2m_senml_cbor_encode.h"
#include "lwm2m_senml_cbor_types.h"
'''

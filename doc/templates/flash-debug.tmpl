zephyr-app-commands Directive
=============================

Zephyr's Sphinx documentation supports special directive,
"zephyr-app-commands", which generates instructions users can type
into their consoles to flash or debug an application.

Building
========

For example, to generate commands to build samples/hello_world for
qemu_x86, include this text in your file:

.. zephyr-app-commands::
   :zephyr-app: samples/hello_world
   :board: qemu_x86
   :goals: build

Building and Flashing
=====================

Multiple goals can be given.

For example, to generate commands to build samples/hello_world for
nrf52_pca10040, then flash it onto the board, include this text in
your file:

.. zephyr-app-commands::
   :zephyr-app: samples/hello_world
   :board: nrf52_pca10040
   :goals: build flash

Debugging
=========

For example, to generate commands to debug samples/hello_world on
nrf52_pca10040:

.. zephyr-app-commands::
   :zephyr-app: samples/hello_world
   :board: nrf52_pca10040
   :goals: debug

Similarly, to generate commands to start a debug server that can be
connected to using a TCP port:

.. zephyr-app-commands::
   :zephyr-app: samples/hello_world
   :board: nrf52_pca10040
   :goals: debugserver

Full List of Options
====================

The full list of options follows.

- :app: if set, the commands will change directories to this path to the
  application.

- :zephyr-app: like :app:, but includes instructions from the Zephyr base
  directory. Cannot be given with :app:.

- :generator: which build system to generate. Valid options are
  currently 'ninja' and 'make'. The default is 'ninja'. This option
  is not case sensitive.

- :host-os: which host OS the instructions are for. Valid options are
   'unix', 'win' and 'all'. The default is 'all'.

- :board: if set, the application build will target the given board.

- :conf: if set, the application build will use the given configuration
  file.

- :gen-args: if set, additional arguments to the CMake invocation

- :build-args: if set, additional arguments to the build invocation

- :build-dir: if set, the application build directory will *APPEND* this
  (relative, Unix-separated) path to the standard build directory. This is
  mostly useful for distinguishing builds for one application within a
  single page.

- :goals: a whitespace-separated list of what to do with the app (in
  'build', 'flash', 'debug', 'debugserver', 'run'). Commands to accomplish
  these tasks will be generated in the right order.

- :maybe-skip-config: if set, this indicates the reader may have already
  created a build directory and changed there, and will tweak the text to
  note that doing so again is not necessary.

- :compact: if set, the generated output is a single code block with no
  additional comment lines
